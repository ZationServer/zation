Name        : Zation
Status      : Alpha
Author      : Luca Scaringella
Description : Application Server Framework

!ZATION!
Version     : 0.5.5
Updates:

IF(V-0.6.0)
ADD create command for example app
ADD config command to check config with json schema
END

IF(FUTURE)
END

!ZATION-SERVER!
Version     : 0.6.0
Updates:

IF(V-0.7.0)

ADD TokenLevelDown Engine Event by change a token connection status and Event by change block token (for panel refresh)
ADD ErrorInfoDown and Up Engine to save errors with the liveTime
ADD SystemController for the Panel
ADD Own Services can be added
ADD CONTROLLER INPUT VALIDATION CAN DISABLED
CHANGE SPECIAL CHANNEL NAME TO CUSTOM CHANNEL

ADD Dependencies from zation-client to zation-server
ADD zation-client generate client javascript

ADD FILE UPLOAD SUPPORT (with validation (type,size))
ADD API FILE OBJECT
ADD AMAZON S3 SUPPORT (UPLOAD FILE)

CHECK THE SYSTEM WHEN A SOCKET GETS DEAUTHENTICATE -> SHOULD I DISCONNECT THEM WITH A REASON ?
DIFFERENT TYPES OF REASONS
- TOKEN IS BLOCKED
- UNVALIDE TOKEN
- TOKEN IS EXPIRE
- LOG OUT
- NEED REAUTHENTICATE
WHEN SHOULD I UPDATE THE CONNECTION STATE OF A TOKEN?
EVERY SOCKET HAS A TOKEN?

PROVE WORKER UNIQUE ID, WHY NOT USE THE PID?
OR CRASH COUNT

ADD ZATION PANEL [
->

[STATISTICS]

{REQUESTS}
-Shows real time request http/socket information on LIVE MAP
-Request is white circle on position when a new comes in
-Request gets yellow when a task error happens
-Request gets red when a exception happens
-Request gets green when its successful finished

-Request per second in diagram

{USER}
-Connected count of users and the count of all users (split in user groups)
-(use count of all in tempDb or function for get all in database)

-Shows circle on the LIVE MAP located where the active user tokens was created
-Mouse on Circle displays user name / user group

{TIME}
-Server time / server start Time

{EXCEPTIONS}
SHOWS LAST EXCEPTIONS RECORDED FOR LIVE TIME
MARK THEM TO CHECKED/UNCHECKED

{CLUSTER}
-worker count / worker start time
-worker restart count

{CHANNELS}
-shows publish actions in channels

{BACKGROUND TASKS}
SHOWS EXECUTE INFORMATION -> EXECUTE TIME (INFO EXPIRE IN 24HOURS)
SHOWS PLANED  TASKS       -> PLANED TIME / TASK NAME (can be userTask - 1)

[ACTIONS (NEED ACTIVATED IN THE MAIN CONFIG(panelActionsAllow) && ACTIONS NEED A PASSWORD CONFIRM(IF ACTIVE IN MAIN.C))]

{TESTING CHANNELS}
-Emit to all/user/special/group/defaultGroup channel from panel

{BLOCK TOKEN}
-Block token/s with tokenId or userId

[PANEL USES JS LIBRARIES]
-chart.js
-sweetAlert
-googleMaps
-bootstrap
-ip to gps
]

[COMPONENTS]
=LIVE TABLE=
LIVE TABLE IS A TABLE THAT DISPLAYS INFORMATION IN REAL TIME
WITH PAUSE YOU CAN STOP THE REAL TIME ACTIONS AND PLAY START IT AGAIN
ALSO YOU CAN EXPORT THE TABLE INFORMATION IN CSV

=LIVE MAP=
Google maps map witch shows real time information on the map.
With pause and play you can control the real time function.

END

IF(FUTURE V-0.8.0 (FIRST RELEASE))
TEST TokenTempLevelDbSupport with file system (levels and pathwise)
ADD TokenTempDownMongoDb Support
?-ADD One of 2 optional params is needed
?-Add controller access for user with id#
?-SUPPORT EVENTS IN A ARRAY?
?-ADD simpleBag -> support get access to set tempDb variables
END

IF(FUTURE V-0.9.0)
?-ADD STREAMING SUPPORT
?-ADD PLUGIN Support -> user can load plugins in main or starter config by set a module object
module object needs to export a zation-plugin object with that object is looking in the plugin controller / configs
and give them back as a string. the zation server can require them with the string look at :
https://stackoverflow.com/questions/17581830/load-node-js-module-from-string-in-memory

configs don't get overwrite -> events are added in event array
configs not set by the main config gets overwrite by the plugin

Or waring by different config options from plugin and main
END

IF(FUTURE V-1.0.0)[MAIN -> PERFORMANCE IMPROVE]
IMPROVE PERFORMANCE IN JAVASCRIPT
CHANGE PARTS OF ZATION IN C++

!ZATION-CLIENT!
Version     : 0.5.1
Updates:

IF(V-0.6)
ADD Panel channel support!
Check All
ADD HTTP Support
[
Client->
Zation.sendHttp(controllerName,params,reaction,token);
zation.getJwtToken();
]
END






